name: Security Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * 1'  # Run every Monday at 3 AM UTC
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  security-events: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      library-changed: ${{ steps.changes.outputs.library }}
      license-utility-changed: ${{ steps.changes.outputs.license-utility }}
      repo-breakdown-changed: ${{ steps.changes.outputs.repo-breakdown }}
      vm-extract-changed: ${{ steps.changes.outputs.vm-extract }}
      dependencies-changed: ${{ steps.changes.outputs.dependencies }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          library:
            - 'aquasec/**'
            - 'setup.py'
            - 'requirements.txt'
            - 'MANIFEST.in'
          license-utility:
            - 'examples/license-utility/**'
          repo-breakdown:
            - 'examples/repo-breakdown/**'
          vm-extract:
            - 'examples/vm-extract/**'
          dependencies:
            - '**/requirements*.txt'
            - 'setup.py'

  security-scan-library:
    needs: detect-changes
    if: needs.detect-changes.outputs.library-changed == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    name: Security Scan - Library
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner on library
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: 'aquasec/'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'
        ignore-unfixed: true
    
    - name: Run Trivy vulnerability scanner for SARIF (Library)
      uses: aquasecurity/trivy-action@master
      if: always()
      with:
        scan-type: 'fs'
        scan-ref: 'aquasec/'
        format: 'sarif'
        output: 'trivy-library.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        ignore-unfixed: true
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-library.sarif'
        category: 'library'

  security-scan-license-utility:
    needs: detect-changes
    if: needs.detect-changes.outputs.license-utility-changed == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    name: Security Scan - License Utility
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner on license utility
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: 'examples/license-utility/'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'
        ignore-unfixed: true
    
    - name: Run Trivy vulnerability scanner for SARIF (License Utility)
      uses: aquasecurity/trivy-action@master
      if: always()
      with:
        scan-type: 'fs'
        scan-ref: 'examples/license-utility/'
        format: 'sarif'
        output: 'trivy-license-utility.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        ignore-unfixed: true
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-license-utility.sarif'
        category: 'license-utility'

  security-scan-repo-breakdown:
    needs: detect-changes
    if: needs.detect-changes.outputs.repo-breakdown-changed == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    name: Security Scan - Repo Breakdown
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner on repo breakdown
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: 'examples/repo-breakdown/'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'
        ignore-unfixed: true
    
    - name: Run Trivy vulnerability scanner for SARIF (Repo Breakdown)
      uses: aquasecurity/trivy-action@master
      if: always()
      with:
        scan-type: 'fs'
        scan-ref: 'examples/repo-breakdown/'
        format: 'sarif'
        output: 'trivy-repo-breakdown.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        ignore-unfixed: true
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-repo-breakdown.sarif'
        category: 'repo-breakdown'

  security-scan-vm-extract:
    needs: detect-changes
    if: needs.detect-changes.outputs.vm-extract-changed == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    name: Security Scan - VM Extract
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner on vm extract
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: 'examples/vm-extract/'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'
        ignore-unfixed: true
    
    - name: Run Trivy vulnerability scanner for SARIF (VM Extract)
      uses: aquasecurity/trivy-action@master
      if: always()
      with:
        scan-type: 'fs'
        scan-ref: 'examples/vm-extract/'
        format: 'sarif'
        output: 'trivy-vm-extract.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        ignore-unfixed: true
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-vm-extract.sarif'
        category: 'vm-extract'

  dependency-check:
    needs: detect-changes
    if: needs.detect-changes.outputs.dependencies-changed == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    name: Dependency Vulnerability Check
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install safety
      run: pip install safety
    
    - name: Check library dependencies
      if: needs.detect-changes.outputs.library-changed == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      run: safety check -r requirements.txt --json --output safety-library.json || true
    
    - name: Check license-utility dependencies
      if: needs.detect-changes.outputs.license-utility-changed == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      run: safety check -r examples/license-utility/requirements.txt --json --output safety-license-utility.json || true
    
    - name: Check repo-breakdown dependencies
      if: needs.detect-changes.outputs.repo-breakdown-changed == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      run: safety check -r examples/repo-breakdown/requirements.txt --json --output safety-repo-breakdown.json || true
    
    - name: Check vm-extract dependencies
      if: needs.detect-changes.outputs.vm-extract-changed == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      run: safety check -r examples/vm-extract/requirements.txt --json --output safety-vm-extract.json || true
    
    - name: Upload safety results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: safety-reports
        path: safety-*.json